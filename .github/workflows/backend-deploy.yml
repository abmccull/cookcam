name: Deploy Backend to Production

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/api/**'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Debug environment
      run: |
        echo "🔍 Debug Info:"
        echo "GitHub Actor: ${{ github.actor }}"
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "SHA: ${{ github.sha }}"
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/api/package-lock.json
        
    - name: Install dependencies
      run: |
        cd backend/api
        npm ci
        
    - name: Run tests
      run: |
        cd backend/api
        npm test || echo "No tests configured yet"
        
    - name: Build TypeScript
      run: |
        cd backend/api
        npm run build
        
    - name: Test SSH Connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: 22
        script: |
          echo "✅ SSH Connection successful!"
          echo "Current directory: $(pwd)"
          echo "Server time: $(date)"
          echo "Disk space: $(df -h /var/www/cookcam-api)"
        
    - name: Prepare deployment files
      run: |
        cd backend/api
        # Create deployment package with only essential files
        tar -czf deployment.tar.gz \
          --exclude=node_modules \
          --exclude=test-images \
          --exclude='*.backup.*' \
          --exclude=coverage \
          --exclude=.nyc_output \
          dist/ package*.json
        ls -la deployment.tar.gz
        
    - name: Upload and Deploy
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: 22
        source: "backend/api/deployment.tar.gz"
        target: "/tmp/"
        
    - name: Complete deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        port: 22
        script: |
          set -e
          echo "🚀 Starting deployment..."
          
          cd /var/www/cookcam-api
          
          # Create backup
          if [ -d "dist" ]; then
            cp -r dist dist.backup.$(date +%Y%m%d_%H%M%S)
            echo "✅ Backup created"
          fi
          
          # Extract new files
          tar -xzf /tmp/backend/api/deployment.tar.gz
          echo "✅ Files extracted"
          
          # Install dependencies
          npm ci --only=production
          echo "✅ Dependencies installed"
          
          # Restart service
          pm2 restart cookcam-api || pm2 start dist/index.js --name cookcam-api
          echo "✅ Service restarted"
          
          # Verify deployment
          sleep 3
          if curl -f http://localhost:3000/health; then
            echo "✅ Deployment successful!"
            # Clean up
            rm -f /tmp/backend/api/deployment.tar.gz
            # Keep only last 3 backups
            ls -t dist.backup.* 2>/dev/null | tail -n +4 | xargs rm -rf || true
          else
            echo "❌ Health check failed!"
            exit 1
          fi
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" = "success" ]; then
          echo "🎉 Backend deployment successful!"
        else
          echo "💥 Backend deployment failed!"
        fi 